
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.border.LineBorder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Deekyech
 */
public class RecieverTextMessageLabel extends javax.swing.JPanel {

    /**
     * Creates new form RecieverMessageLabel
     */
    private JTextArea text;
    int horizontalSpace = 8;
    int numChars = 40;
    int verticalSpace = 30;
    public RecieverTextMessageLabel(String s, boolean sender) {
        initComponents();
        setLayout(new BorderLayout());
        text = new JTextArea();
        add(text);
        text.setEditable(false);
        if(sender) {
            text.setForeground(new Color(31, 54, 61));
            text.setBackground(new Color(229, 229, 229));
            setBorder(new LineBorder(new Color(229, 229, 229), 2, true));
        } else {
            text.setForeground(Color.WHITE);
            text.setBackground(new Color(31, 54, 61));
            setBorder(new LineBorder(new Color(31, 54, 61), 2, true));
        }
        //text.setOpaque(false);
//        text.setBouds(10,10,this.getSize().width,this.getSize().height);
        text.setLineWrap(true);
        text.setText(s);
//        text.setForeground(this.getForeground());
        text.setFont(new Font("Calibri", Font.PLAIN, 18));
//        text.setOpaque(false);
//        this.setOpaque(false);
    }
    public Dimension getSize() {
        int horizontalSize = (text.getText().toCharArray().length)*horizontalSpace;
        if(horizontalSize>(horizontalSpace*numChars))
            return new Dimension(horizontalSpace*numChars, ((horizontalSize/(horizontalSpace*numChars))+1)*verticalSpace);
        return new Dimension(horizontalSize, verticalSpace);
    }
    public void setForegroundColor(Color c) {
        text.setForeground(c);
    }
//    @Override
//    protected void paintComponent(Graphics g) {
//        super.paintComponent(g);
//        g.setColor(new Color(229, 229, 229));
//        g.drawRoundRect(0, 0, (int) getSize().getWidth(), (int) getSize().getHeight(), 10, 10);
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(31, 54, 61));
        setForeground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(32, 32));
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
//
//@Override
//protected void paintComponent(Graphics g) {
//    g.setColor(this.getBackground());
//    g.fillRoundRect(0,0,this.getSize().width,this.getSize().height,25,25);
//    super.paintComponent(g);
//}
public static void main(String[] args) {
    JFrame jf = new JFrame();
    jf.setSize(500,400);
    jf.setLayout(null);
    RecieverTextMessageLabel label = new RecieverTextMessageLabel("Hello My name is petya i play holi", false);
    jf.add(label);
    label.setLocation(0,0);
    label.setSize(label.getSize());
    jf.setVisible(true);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}